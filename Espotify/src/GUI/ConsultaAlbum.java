/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package GUI;

import Logica.Album;
import Logica.Artista;
import Logica.Controlador;
import Logica.Genero;
import Logica.Tema;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author camil
 */
public class ConsultaAlbum extends javax.swing.JInternalFrame {

    /**
     * Creates new form ConsultaAlbum
     */
    public ConsultaAlbum() {
        initComponents();
        txtG.setVisible(false);  //No aparece en la ventana principal hasta que el usuario seleccione genero o artista
        comboOpciones.setVisible(false); // Lo mismo con este
        txtAlbum.setVisible(false);
        comboAlbumes.setVisible(false);
        txtNombre.setVisible(false);
        nombreAlbum.setVisible(false);
        txtAñoC.setVisible(false);
        añoCreacionAlbum.setVisible(false);
        txtGenAlbum.setVisible(false);
        generosAlbum.setVisible(false);
        txtTemas.setVisible(false);
        temasAlbum.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        txtG = new javax.swing.JLabel();
        comboOpciones = new javax.swing.JComboBox<>();
        txtAlbum = new javax.swing.JLabel();
        comboAlbumes = new javax.swing.JComboBox<>();
        txtNombre = new javax.swing.JLabel();
        txtAñoC = new javax.swing.JLabel();
        txtGenAlbum = new javax.swing.JLabel();
        txtTemas = new javax.swing.JLabel();
        nombreAlbum = new javax.swing.JLabel();
        añoCreacionAlbum = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        generosAlbum = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        temasAlbum = new javax.swing.JList<>();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel1.setText("Consulta Álbum");

        jLabel2.setText("Seleccione la opción a consultar:");

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Genero", "Artista" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        txtG.setText("texto");

        comboOpciones.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboOpcionesItemStateChanged(evt);
            }
        });

        txtAlbum.setText("Albumes:");

        comboAlbumes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboAlbumesItemStateChanged(evt);
            }
        });
        comboAlbumes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboAlbumesActionPerformed(evt);
            }
        });

        txtNombre.setText("Nombre Album:");

        txtAñoC.setText("Año creación:");

        txtGenAlbum.setText("Generos:");

        txtTemas.setText("Temas:");

        nombreAlbum.setText("jLabel7");

        añoCreacionAlbum.setText("jLabel8");

        generosAlbum.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(generosAlbum);

        jScrollPane3.setViewportView(temasAlbum);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNombre)
                                    .addComponent(txtAñoC)
                                    .addComponent(txtGenAlbum))
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(añoCreacionAlbum)
                                    .addComponent(nombreAlbum)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtTemas)
                                .addGap(55, 55, 55)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtG)
                                    .addComponent(comboOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(53, 53, 53)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboAlbumes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAlbum))))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtG)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtAlbum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboAlbumes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombre)
                            .addComponent(nombreAlbum)
                            .addComponent(txtTemas))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAñoC)
                            .addComponent(añoCreacionAlbum))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtGenAlbum)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        if ("Genero".equals(jList1.getSelectedValue()) ){ //Si se selecciona Genero de la lista
            txtG.setText("Generos:"); //Se setea el texto con la palabra genero
            txtG.setVisible(true);   //Y se hace visible ya que antes no lo era   
            comboOpciones.removeAllItems(); 
            Controlador controlador= new Controlador();
             List<Genero> listaGeneros = controlador.listaGeneros(); //pido los Artistas
             //Crear DTGenero y cargarlos y pedirle al controlador la lista de datatypes de generos
            for (Genero auxA:listaGeneros){//lleno el combobox con los mails
                 comboOpciones.addItem(auxA.getNombre());
            }
            comboOpciones.setVisible(true);
            txtAlbum.setVisible(true);
           /* comboOpciones.setSelectedItem(null);
            comboAlbumes.setSelectedItem(null);*/
        }
        if ("Artista".equals(jList1.getSelectedValue()) ){
            txtG.setText("Artistas:"); //Lo mismo pero con Artista
            txtG.setVisible(true);
            comboOpciones.removeAllItems();
            Controlador controlador= new Controlador();
             List<Artista> listaArtistas = controlador.listaArtistas(); //pido los Artistas
             //Cargar en controlador una lista de datatypes de artistas y pasarlo para aca asi no trabajo directo con el objeto
            for (Artista auxA:listaArtistas){//lleno el combobox con los mails
                 comboOpciones.addItem(auxA.getNickname());
            }
            comboOpciones.setVisible(true);
            txtAlbum.setVisible(true);
            /*comboAlbumes.removeAllItems();
            comboAlbumes.setVisible(true);
           comboOpciones.setSelectedItem(null);
            comboAlbumes.setSelectedItem(null);*/
            
        }    
        //comboOpciones.setSelectedItem(null);
        //comboAlbumes.setSelectedItem(null);
       
    }//GEN-LAST:event_jList1ValueChanged

    private void comboOpcionesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboOpcionesItemStateChanged

        Controlador controlador= new Controlador();
        if ("Genero".equals(jList1.getSelectedValue()) ){  
            txtAlbum.setVisible(true);
            comboAlbumes.removeAllItems();
            List<Album> listaAlbumes = controlador.listaAlbumes(); //Obtengo la lista de todos los albumes del controlador
            //Crear funcion en el controlador que convierta esa lista de albumes en una lista de data albumes
            //Pasar a esta capa, la lista de data albumes. Se la pido al controlador "controlador.listaDTalbumes"
              for (Album auxA:listaAlbumes){//Recorro esa lista de albumbes
                  List<Genero> listaGenero = auxA.getListaGeneros();//A cada album de la lista anterior, le pido su lista de generos
                  for (Genero auxG:listaGenero){
                      if (auxG.getNombre().equals((String)comboOpciones.getSelectedItem())){
                          comboAlbumes.addItem(auxA.getId()+ " " + auxA.getNombre()); 
                      }
                  }
                }
        }
        if ("Artista".equals(jList1.getSelectedValue()) ){
            txtAlbum.setVisible(true);
            comboAlbumes.removeAllItems();
            Artista artista = null;
            try {
                artista = controlador.findArtistaNickname((String)comboOpciones.getSelectedItem());     
            } catch (Exception ex) {
                Logger.getLogger(ConsultaAlbum.class.getName()).log(Level.SEVERE, null, ex);
            }
            List<Album> listaAlbum = artista.getAlbumes();
            for (Album auxA:listaAlbum){
                //CONTROL POR SI EL ALBUM ES VACIO
                comboAlbumes.addItem(auxA.getNombre());
            }
              
        }
        if (null!=comboOpciones.getSelectedItem()){
            comboAlbumes.setVisible(true);
        }
        //comboAlbumes.setVisible(true);
    }//GEN-LAST:event_comboOpcionesItemStateChanged

    private void comboAlbumesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboAlbumesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboAlbumesActionPerformed

    private void comboAlbumesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboAlbumesItemStateChanged
            //Tengo que encontrar el artista seleccionado y buscar el album seleccionado posteriormente, en la lista de albumes del artista        
            Controlador controlador= new Controlador();
            if ("Artista".equals(jList1.getSelectedValue()) ){
            Artista artista = null;
            try {
                artista = controlador.findArtistaNickname((String)comboOpciones.getSelectedItem());     
            } catch (Exception ex) {
                Logger.getLogger(ConsultaAlbum.class.getName()).log(Level.SEVERE, null, ex);
            }
            List<Album> listaAlbum = artista.getAlbumes();
            for (Album auxA:listaAlbum){
                //  Como hago para que no se muestre de una? O que no se seleccione solo dle combo box
                    if (auxA.getNombre().equals((String)comboAlbumes.getSelectedItem())){
                          //MOSTRAR LOS DATOS DEL ALBUM
                          //auxA es el album a mostrar
                        nombreAlbum.setText(auxA.getNombre());
                        añoCreacionAlbum.setText(""+(auxA.getAnioCreacion().getYear()+1900));
                        List<Genero> listaGeneros = auxA.getListaGeneros();
                        DefaultListModel model = new DefaultListModel();
                        for (Genero auxG: listaGeneros){
                              model.addElement(auxG.getNombre());
                        }
                        generosAlbum.setModel(model);
                        //MOSTRAR LOS TEMAS
                        //CREAR OTRA VENTANA PARA MOSTRAR LOS TEMAS Y HACERLO CON DATATYPE
                        DefaultListModel modelTema = new DefaultListModel();
                        List<Tema> temas = auxA.getListaTemas();
                        for (Tema auxT: temas){
                            modelTema.addElement(auxT.getNombre());
                        }
                        temasAlbum.setModel(modelTema);
                        
                   }
            }

        }
        if ("Genero".equals(jList1.getSelectedValue()) ){
            
            String p = (String) comboAlbumes.getSelectedItem();
            
           String[] parts = p.split(" ");
           
            
            
            
            
        
        
        
        
        }
                    
        txtNombre.setVisible(true);
        nombreAlbum.setVisible(true);
        txtAñoC.setVisible(true);
        añoCreacionAlbum.setVisible(true);
        txtGenAlbum.setVisible(true);
        generosAlbum.setVisible(true);
        txtTemas.setVisible(true);
        temasAlbum.setVisible(true);
    }//GEN-LAST:event_comboAlbumesItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel añoCreacionAlbum;
    private javax.swing.JComboBox<String> comboAlbumes;
    private javax.swing.JComboBox<String> comboOpciones;
    private javax.swing.JList<String> generosAlbum;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel nombreAlbum;
    private javax.swing.JList<String> temasAlbum;
    private javax.swing.JLabel txtAlbum;
    private javax.swing.JLabel txtAñoC;
    private javax.swing.JLabel txtG;
    private javax.swing.JLabel txtGenAlbum;
    private javax.swing.JLabel txtNombre;
    private javax.swing.JLabel txtTemas;
    // End of variables declaration//GEN-END:variables
}
