/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package GUI;

import Datatypes.DTSub;
import Logica.Fabrica;
import Logica.IControlador;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author ivan
 */
public class ActualizarSubscripcion extends javax.swing.JInternalFrame {
    //Esto para que no sea editable la tabla
    
    public class NoEditableTableModel extends DefaultTableModel {
    @Override
    public boolean isCellEditable(int row, int column) {
        return false; // Las celdas no son editables
    }
}
private NoEditableTableModel model;

        Fabrica fabrica = Fabrica.getInstance();
    IControlador control = fabrica.getIControlador();
    
    public ActualizarSubscripcion() {
        initComponents();
        
        model = new NoEditableTableModel();
        model.addColumn("ID");
        model.addColumn("Cliente");
        model.addColumn("Tipo");
        model.addColumn("Estado");
        model.addColumn("Fecha Activación");
        
        // Asignar el modelo a la tabla
        jTable1.setModel(model);
        
        // Cargar las suscripciones al iniciar el frame
        listarSubscripciones();

        // Agregar listener al botón de modificar
        BotonModificar.addActionListener(evt -> modificarSubscripcion());
    }

        private void listarSubscripciones() {
        try {
            // Limpiar el modelo antes de cargar nuevos datos
            model.setRowCount(0);
            
            // Obtener las suscripciones desde el controlador
            List<DTSub> subscripciones = control.listarSubscripciones();

            for (DTSub sub : subscripciones) {
                model.addRow(new Object[]{
                    sub.getId(),
                    sub.getCliente(),
                    sub.getTipo(),
                    sub.getEstado(),
                    sub.getFechaActivacion()
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al listar suscripciones: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void modificarSubscripcion() {
int selectedRow = jTable1.getSelectedRow(); // Obtener la fila seleccionada
    if (selectedRow != -1) {

        Long id = (Long) model.getValueAt(selectedRow, 0); // Obtener el ID de la suscripción

        // Crear un JComboBox con las opciones "Vigente" y "Cancelada"
        String[] opciones = {"Vigente", "Cancelada"};
        JComboBox<String> comboBox = new JComboBox<>(opciones);

        // Mostrar el JComboBox en un JOptionPane
        int result = JOptionPane.showConfirmDialog(this, comboBox, "Seleccionar nuevo estado", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if (result == JOptionPane.OK_OPTION) {
            String nuevoEstado = (String) comboBox.getSelectedItem(); // Obtener el estado seleccionado
            try {
                control.modificarEstadoSuscripcion(id, nuevoEstado); // Llama al método que modifica la suscripción
                JOptionPane.showMessageDialog(this, "Estado modificado a: " + nuevoEstado);
                listarSubscripciones(); // Actualizar la lista después de modificar
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al modificar la suscripción: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "Por favor, selecciona una suscripción para modificar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
    }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        BotonModificar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        BotonModificar.setText("Modificar");
        BotonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonModificarActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BotonModificar)
                .addGap(113, 113, 113)
                .addComponent(jButton2)
                .addGap(119, 119, 119))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonModificar)
                    .addComponent(jButton2))
                .addGap(0, 42, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void BotonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonModificarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BotonModificarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonModificar;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
